@using Blogifier.Core.Common
@using Blogifier.Core.Data.Models
@using Blogifier.Core.Extensions
@model BlogPostsModel
@inject IComponentHelper helper

<section class="blog-cover" style="background-image: url('@Model.CoverImg')">
    <div class="container">
        <h1 class="cover-title">@BlogSettings.Title</h1>
        <p class="cover-desc">@BlogSettings.Description</p>
    </div>
</section>

<section class="container">
    @await helper.InvokeAsync(Component, "PostList", new { listType = 1, count = 2 })
</section>

@if (Model.Posts != null)
{
    foreach (var item in Model.Posts)
    {
        if (!item.IsFeatured)
        {
            <article class="post">
                <section class="container">
                    <header class="post-header">
                        <h2 class="post-title"><a href="~/@ApplicationSettings.BlogRoute@item.Slug">@item.Title</a></h2>
                        <div class="post-meta">
                            <a href="~/@ApplicationSettings.BlogRoute@item.BlogSlug">
                                <img class="post-meta-img" src="@item.Avatar" alt="@item.AuthorName" />
                                <span class="post-meta-author">@item.AuthorName</span>
                            </a>
                            <time class="post-meta-time">@item.Published.ToFriendlyDateString()</time>
                            @if (item.PostCategories != null && item.PostCategories.Count > 0)
                            {
                                <span class="post-meta-category">
                                    in
                                    @foreach (var cat in item.PostCategories)
                                    {
                                        <a href="~/@ApplicationSettings.BlogRoute@item.BlogSlug/@cat">@cat</a>
                                    }
                                </span>
                            }
                        </div>
                    </header>
                    <div class="post-content">
                        <p class="post-excerpt">@Html.Raw(item.Content)</p>
                        <a class="post-more" href="~/@ApplicationSettings.BlogRoute@item.Slug">Read More</a>
                    </div>
                </section>
            </article>
        }
    }
}

<section class="container">
    @try
    {
        @await helper.InvokeAsync(Component,"Newsletter",new {newsletterName="BOBBINS" })
    }
    catch (Exception ex)
    {
        <h4>Error loading widget</h4>
        <div>@ex.Message</div>
    }
</section>

@Html.Partial($"~/{ApplicationSettings.BlogThemesFolder}/OneThree/_Shared/_Pager.cshtml", Model.Pager)
